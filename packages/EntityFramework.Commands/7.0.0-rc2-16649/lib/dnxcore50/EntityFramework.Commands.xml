<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework.Commands</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.DuplicateMigrationName(System.Object)">
            <summary>
            The name '{migrationName}' is used by an existing migration.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.MultipleContexts">
            <summary>
            More than one DbContext was found. Specify which one to use. Use the '-Context' parameter for PowerShell commands and the '--context' parameter for DNX commands.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.MultipleContextsWithName(System.Object)">
            <summary>
            More than one DbContext named '{name}' was found. Specify which one to use by providing its fully qualified name.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.MultipleContextsWithQualifiedName(System.Object)">
            <summary>
            More than one DbContext named '{name}' was found. Specify which one to use by providing its fully qualified name using its exact case.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.NoContext">
            <summary>
            No DbContext was found. Ensure that you're using the correct assembly and that the type is neither abstract nor generic.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.NoContextWithName(System.Object)">
            <summary>
            No DbContext named '{name}' was found.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.LogUseContext(System.Object)">
            <summary>
            Using context '{name}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.ManuallyDeleted">
            <summary>
            A manual migration deletion was detected.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.NoMigrationFile(System.Object,System.Object)">
            <summary>
            No file named '{file}' was found. You must manually remove the migration class '{migrationClass}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.NoMigrationMetadataFile(System.Object)">
            <summary>
            No file named '{file}' was found.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.NoSnapshot">
            <summary>
            No ModelSnapshot was found.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.NoSnapshotFile(System.Object,System.Object)">
            <summary>
            No file named '{file}' was found. You must manually remove the model snapshot class '{snapshotClass}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.RemovingMigration(System.Object)">
            <summary>
            Removing migration '{name}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.RemovingSnapshot">
            <summary>
            Removing model snapshot.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.RevertingSnapshot">
            <summary>
            Reverting model snapshot.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.UnapplyMigration(System.Object)">
            <summary>
            The migration '{name}' has already been applied to the database. Unapply it and try again. If the migration has been applied to other databases, consider reverting its changes using a new migration.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.UnknownOperation(System.Object)">
            <summary>
            The current CSharpMigrationOperationGenerator cannot scaffold operations of type '{operationType}'. Configure your services to use one that can.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.UnknownLiteral(System.Object)">
            <summary>
            The current CSharpHelper cannot scaffold literals of type '{literalType}'. Configure your services to use one that can.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.CannotFindRuntimeProviderAssembly(System.Object)">
            <summary>
            Unable to find provider assembly with name {assemblyName}. Ensure the specified name is correct and is referenced by the project.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.DestructiveOperation">
            <summary>
            An operation was scaffolded that may result in the loss of data. Please review the migration for accuracy.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.ReusingDirectory(System.Object)">
            <summary>
            Reusing directory of file '{file}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.WritingMigration(System.Object)">
            <summary>
            Writing migration to '{file}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.WritingSnapshot(System.Object)">
            <summary>
            Writing model snapshot to '{file}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.Done">
            <summary>
            Done.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.ReusingNamespace(System.Object)">
            <summary>
            Reusing namespace of type '{type}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.ReusingSnapshotName(System.Object)">
            <summary>
            Reusing model snapshot name '{name}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.CannotFindDesignTimeProviderAssembly(System.Object)">
            <summary>
            Unable to find design-time provider assembly. Please install the {designTimeProviderAssemblyName} NuGet package and ensure that the package is referenced by the project.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.CannotFindDesignTimeProviderAssemblyAttribute(System.Object,System.Object)">
            <summary>
            Unable to find expected assembly attribute named {attributeName} in provider assembly {runtimeProviderAssemblyName}. This attribute is required to identify the class which acts as the design-time service provider factory.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.NonRelationalProvider(System.Object)">
            <summary>
            {provider} is not a Relational provider and therefore cannot be use with Migrations.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.UnreferencedAssembly(System.Object,System.Object)">
            <summary>
            Could not load assembly '{assembly}'. Ensure it is referenced by the startup project '{startupProject}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.LogFindingContexts">
            <summary>
            Finding DbContext classes...
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.ForeignMigrations(System.Object)">
            <summary>
            The namespace '{migrationsNamespace}' contains migrations for a different DbContext. This can result in conflicting migration names. It's reccommend to put migrations for different DbContext classes into different namespaces.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.ConnectionStringRequired">
            <summary>
            ConnectionString is required to generate code.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.ContextClassNotValidCSharpIdentifier(System.Object)">
            <summary>
            The context class name passed in, {contextClassName}, is not a valid C# identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.ProjectPathRequired">
            <summary>
            ProjectPath is required to generate code.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.CommandsStrings.RootNamespaceRequired">
            <summary>
            Root namespace of the project is required to generate code.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.CommandsStrings.MigrationsAssemblyMismatch(System.Object,System.Object)">
            <summary>
            Your target project '{assembly}' doesn't match your migrations assembly '{migrationsAssembly}'. Change your target project to the migrations project by using the Package Manager Console's Default project drop-down list or by using the '--targetProject' option for DNX commands. Change your migrations assembly by using DbContextOptionsBuilder. E.g. options.UseSqlServer().MigrationsAssembly("{assembly}")
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Scaffolding.Internal.CodeWriter.GetExistingFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Data.Entity.Metadata.IEntityType})">
            <summary>
            Returns a list of the files which would be output by this class where
            the file already exists.
            </summary>
            <param name="outputPath"> directory where the files are to be output </param>
            <param name="dbContextClassName"> name of the <see cref="T:Microsoft.Data.Entity.DbContext" /> class </param>
            <param name="entityTypes"> a list of the <see cref="T:Microsoft.Data.Entity.Metadata.IEntityType" /> classes to be output </param>
            <returns> A list of paths to the output files which already exist </returns>
        </member>
        <member name="M:Microsoft.Data.Entity.Scaffolding.Internal.CodeWriter.GetReadOnlyFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Data.Entity.Metadata.IEntityType})">
            <summary>
            Returns a list of the files which would be output by this class but
            which currently exist and would not be able to be overwritten due to
            being read-only.
            </summary>
            <param name="outputPath"> directory where the files are to be output </param>
            <param name="dbContextClassName"> name of the <see cref="T:Microsoft.Data.Entity.DbContext" /> class </param>
            <param name="entityTypes"> a list of the <see cref="T:Microsoft.Data.Entity.Metadata.IEntityType" /> classes to be output </param>
            <returns> A list of paths to the output files which currently exist and are read-only </returns>
        </member>
        <member name="T:Microsoft.Data.Entity.Scaffolding.Internal.IFileService">
            <summary>
                Abstraction for outputting a 'file'. Normally this will be outputting a file to disk
                but this allows for other implementations which e.g. just output to memory.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Scaffolding.Internal.IFileService.IsFileReadOnly(System.String,System.String)">
            <summary>
                Checks whether 'file' is read-only. Absence of the 'file' is interpreted as readable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Scaffolding.Internal.IFileService.OutputFile(System.String,System.String,System.String)">
            <summary>
                Creates, if necessary, a directory with the specified name. Creates, if necessary,
                a 'file' located within the given directory and with the given name.
                Ensures that the contents of the 'file' contain the given contents (overwriting if necessary).
            </summary>
            <returns>the full path of the output 'file'</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Data.Entity.Scaffolding.Internal.ReverseEngineeringGenerator.ConstructNamespaceAndCanonicalizedPaths(System.String,System.String,System.String)" -->
    </members>
</doc>
