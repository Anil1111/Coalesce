<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Dnx.Runtime</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Dnx.Runtime.ApplicationEnvironment">
            <summary>
            Application environment built by the application host.
            </summary>
        </member>
        <member name="M:Microsoft.Dnx.Runtime.ProjectReader.BuildTargetFrameworkNode(Microsoft.Dnx.Runtime.Project,System.String,Microsoft.Extensions.JsonParser.Sources.JsonObject)">
            <summary>
            Parse a Json object which represents project configuration for a specified framework
            </summary>
            <param name="frameworkKey">The name of the framework</param>
            <param name="frameworkValue">The Json object represent the settings</param>
            <returns>Returns true if it successes.</returns>
        </member>
        <member name="T:Microsoft.Dnx.Runtime.Compilation.CompilerOptionsProvider">
            <summary>
            Default implementation for <see cref="T:Microsoft.Extensions.CompilationAbstractions.ICompilerOptionsProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Dnx.Runtime.Compilation.CompilerOptionsProvider.GetCompilerOptions(System.String,System.Runtime.Versioning.FrameworkName,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Dnx.Runtime.LibraryDescription">
            <summary>
            Represents the result of resolving the library
            </summary>
        </member>
        <member name="M:Microsoft.Dnx.Runtime.ProjectDescription.#ctor(System.String,System.String)">
            <summary>
            Constructs a unresolved project description
            </summary>
        </member>
        <member name="M:Microsoft.Dnx.Runtime.Internal.ProjectUtilities.GetProject(System.String,System.String,System.String,System.Collections.Generic.ICollection{Microsoft.Extensions.CompilationAbstractions.DiagnosticMessage})">
            <summary>
            Create project from a project.json in string
            </summary>
        </member>
        <member name="T:Microsoft.Dnx.Runtime.Common.DependencyInjection.ActivatorUtilities">
            <summary>
            Helper code for the various activator services.
            </summary>
        </member>
        <member name="M:Microsoft.Dnx.Runtime.Common.DependencyInjection.ActivatorUtilities.GetServiceOrCreateInstance(System.IServiceProvider,System.Type)">
            <summary>
            Retrieve an instance of the given type from the service provider. If one is not found then instantiate it directly.
            </summary>
            <param name="services"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Dnx.Runtime.Common.DependencyInjection.ActivatorUtilities.CreateInstance(System.IServiceProvider,System.Type)">
            <summary>
            Instantiate an object of the given type, using constructor service injection if possible.
            </summary>
            <param name="services"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Dnx.Runtime.Common.DependencyInjection.ActivatorUtilities.CreateInstance``1(System.IServiceProvider)">
            <summary>
            Instantiate an object of the given type, using constructor service injection if possible.
            </summary>
            <param name="services"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Dnx.Runtime.Common.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type)">
            <summary>
            Creates a factory to instantiate a type using constructor service injection if possible.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:NuGet.SemanticVersion">
            <summary>
            A hybrid implementation of SemVer that supports semantic versioning as described at http://semver.org while not strictly enforcing it to 
            allow older 4-digit versioning schemes to continue working.
            </summary>
        </member>
        <member name="P:NuGet.SemanticVersion.Version">
            <summary>
            Gets the normalized version portion.
            </summary>
        </member>
        <member name="P:NuGet.SemanticVersion.SpecialVersion">
            <summary>
            Gets the optional special version.
            </summary>
        </member>
        <member name="M:NuGet.SemanticVersion.Parse(System.String)">
            <summary>
            Parses a version string using loose semantic versioning rules that allows 2-4 version components followed by an optional special version.
            </summary>
        </member>
        <member name="M:NuGet.SemanticVersion.TryParse(System.String,NuGet.SemanticVersion@)">
            <summary>
            Parses a version string using loose semantic versioning rules that allows 2-4 version components followed by an optional special version.
            </summary>
        </member>
        <member name="M:NuGet.SemanticVersion.TryParseStrict(System.String,NuGet.SemanticVersion@)">
            <summary>
            Parses a version string using strict semantic versioning rules that allows exactly 3 components and an optional special version.
            </summary>
        </member>
        <member name="M:NuGet.SemanticVersion.ParseOptionalVersion(System.String)">
            <summary>
            Attempts to parse the version token as a SemanticVersion.
            </summary>
            <returns>An instance of SemanticVersion if it parses correctly, null otherwise.</returns>
        </member>
        <member name="T:NuGet.NetPortableProfile">
            <summary>
            Represent one profile of the .NET Portable library
            </summary>
        </member>
        <member name="M:NuGet.NetPortableProfile.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Runtime.Versioning.FrameworkName},System.Collections.Generic.IEnumerable{System.Runtime.Versioning.FrameworkName})">
            <summary>
            Creates a portable profile with the given name and supported frameworks.
            </summary>
        </member>
        <member name="M:NuGet.NetPortableProfile.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Runtime.Versioning.FrameworkName},System.Collections.Generic.IEnumerable{System.Runtime.Versioning.FrameworkName})">
            <summary>
            Creates a portable profile for the given framework version, profile name and 
            supported frameworks.
            </summary>
            <param name="frameworkDirectory">.NET framework version that the profile belongs to, like "v4.0".</param>
            <param name="name">Name of the portable profile, like "win+net45".</param>
            <param name="supportedFrameworks">Supported frameworks.</param>
        </member>
        <member name="P:NuGet.NetPortableProfile.Name">
            <summary>
            Gets the profile name.
            </summary>
        </member>
        <member name="P:NuGet.NetPortableProfile.FrameworkDirectory">
            <summary>
            Gets the framework version that this profile belongs to.
            </summary>
        </member>
        <member name="P:NuGet.NetPortableProfile.CustomProfileString">
            <summary>
            Returns the string that represents all supported frameworks by this profile, separated by the + sign.
            </summary>
            <example>
            sl4+net45+windows8
            </example>
        </member>
        <member name="M:NuGet.NetPortableProfile.Parse(System.String)">
            <summary>
            Attempt to parse a profile string into an instance of <see cref="T:NuGet.NetPortableProfile"/>.
            The profile string can be either ProfileXXX or sl4+net45+wp7
            </summary>
        </member>
        <member name="F:NuGet.Constants.PackageExtension">
            <summary>
            Represents the ".nupkg" extension.
            </summary>
        </member>
        <member name="F:NuGet.Constants.ManifestExtension">
            <summary>
            Represents the ".nuspec" extension.
            </summary>
        </member>
        <member name="F:NuGet.Constants.HashFileExtension">
            <summary>
            Represents the ".nupkg.sha512" extension.
            </summary>
        </member>
        <member name="F:NuGet.Constants.ContentDirectory">
            <summary>
            Represents the content directory in the package.
            </summary>
        </member>
        <member name="F:NuGet.Constants.LibDirectory">
            <summary>
            Represents the lib directory in the package.
            </summary>
        </member>
        <member name="F:NuGet.Constants.ToolsDirectory">
            <summary>
            Represents the tools directory in the package.
            </summary>
        </member>
        <member name="F:NuGet.Constants.BuildDirectory">
            <summary>
            Represents the build directory in the package.
            </summary>
        </member>
        <member name="M:NuGet.IPackagePathResolver.GetInstallPath(System.String,NuGet.SemanticVersion)">
            <summary>
            Gets the physical installation path of a package
            </summary>
        </member>
        <member name="M:NuGet.IPackagePathResolver.GetHashPath(System.String,NuGet.SemanticVersion)">
            <summary>
            Gets the physical path to the nupkg.sha512 file
            </summary>
            <returns></returns>
        </member>
        <member name="M:NuGet.IPackagePathResolver.GetPackageFilePath(System.String,NuGet.SemanticVersion)">
            <summary>
            Gets the phsyical path to the nupkg file
            </summary>
        </member>
        <member name="M:NuGet.IPackagePathResolver.GetManifestFilePath(System.String,NuGet.SemanticVersion)">
            <summary>
            Gets the phsyical path to the nuspec file
            </summary>
        </member>
        <member name="M:NuGet.IPackagePathResolver.GetPackageDirectory(System.String,NuGet.SemanticVersion)">
            <summary>
            Gets the package directory name
            </summary>
        </member>
        <member name="M:NuGet.IPackagePathResolver.GetPackageFileName(System.String,NuGet.SemanticVersion)">
            <summary>
            Gets file name of the nupkg file
            </summary>
        </member>
        <member name="M:NuGet.IPackagePathResolver.GetManifestFileName(System.String,NuGet.SemanticVersion)">
            <summary>
            Gets file name of the nuspec file
            </summary>
        </member>
        <member name="T:NuGet.Resources.NuGetResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.AdditonalConstraintsDefined">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; has an additional constraint {1} defined in {2}..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.AggregateQueriesRequireOrder">
            <summary>
              Looks up a localized string similar to Aggregate queries require at least one OrderBy..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.CannotCreateEmptyPackage">
            <summary>
              Looks up a localized string similar to Cannot create a package that has no dependencies nor content..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.CircularDependencyDetected">
            <summary>
              Looks up a localized string similar to Circular dependency detected &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ConflictErrorWithDependent">
            <summary>
              Looks up a localized string similar to Updating &apos;{0}&apos; to &apos;{1}&apos; failed. Unable to find a version of &apos;{2}&apos; that is compatible with &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ConflictErrorWithDependents">
            <summary>
              Looks up a localized string similar to Updating &apos;{0}&apos; to &apos;{1}&apos; failed. Unable to find versions of &apos;{2}&apos; that are compatible with &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Debug_AddedFile">
            <summary>
              Looks up a localized string similar to Added file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Debug_AddedFileToFolder">
            <summary>
              Looks up a localized string similar to Added file &apos;{0}&apos; to folder &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Debug_LookingForUpdates">
            <summary>
              Looks up a localized string similar to Looking for updates for &apos;{0}&apos;....
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Debug_RemovedFile">
            <summary>
              Looks up a localized string similar to Removed file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Debug_RemovedFileFromFolder">
            <summary>
              Looks up a localized string similar to Removed file &apos;{0}&apos; to folder &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Debug_RemovedFolder">
            <summary>
              Looks up a localized string similar to Removed folder &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.DependencyHasInvalidVersion">
            <summary>
              Looks up a localized string similar to Dependency &apos;{0}&apos; has an invalid version..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.DependencyOnlyCannotMixDependencies">
            <summary>
              Looks up a localized string similar to Child dependencies of dependency only packages cannot mix external and project packages..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.DownloadProgressStatus">
            <summary>
              Looks up a localized string similar to Downloading {0} {1}....
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.DuplicateDependenciesDefined">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; already has a dependency defined for &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Error_NoWritableConfig">
            <summary>
              Looks up a localized string similar to There are no writable config files..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Error_PackageAlreadyExists">
            <summary>
              Looks up a localized string similar to Package {0} already exists..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ErrorLoadingPackages">
            <summary>
              Looks up a localized string similar to An error occurred while loading packages from &apos;{0}&apos;: {1}.
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ErrorReadingFile">
            <summary>
              Looks up a localized string similar to Error reading &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ErrorReadingPackage">
            <summary>
              Looks up a localized string similar to Unable to read package from path &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ExternalPackagesCannotDependOnProjectLevelPackages">
            <summary>
              Looks up a localized string similar to External packages cannot depend on packages that target projects..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.FileConflictMessage">
            <summary>
              Looks up a localized string similar to File &apos;{0}&apos; already exists in project &apos;{1}&apos;. Do you want to overwrite it?.
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.FileDoesNotExit">
            <summary>
              Looks up a localized string similar to File &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.GetUpdatesParameterMismatch">
            <summary>
              Looks up a localized string similar to The &apos;packages&apos; and &apos;versionConstraints&apos; parameters must have the same number of elements..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.IncompatibleSchema">
            <summary>
              Looks up a localized string similar to The schema version of &apos;{0}&apos; is incompatible with version {1} of NuGet. Please upgrade NuGet to the latest version from http://go.microsoft.com/fwlink/?LinkId=213942..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Info_OverwriteExistingFile">
            <summary>
              Looks up a localized string similar to Overwrite existing file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.InvalidFeed">
            <summary>
              Looks up a localized string similar to Could not connect to the feed specified at &apos;{0}&apos;. Please verify that the package source (located in the Package Manager Settings) is valid and ensure your network connectivity..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.InvalidFrameworkNameFormat">
            <summary>
              Looks up a localized string similar to Invalid framework name format. Expected {framework}{version}-{profile}..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.InvalidNullSettingsOperation">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; cannot be called on a NullSettings. This may be caused on account of insufficient permissions to read or write to &quot;%AppData%\NuGet\NuGet.config&quot;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.InvalidPackageId">
            <summary>
              Looks up a localized string similar to The package ID &apos;{0}&apos; contains invalid characters. Examples of valid package IDs include &apos;MyPackage&apos; and &apos;MyPackage.Sample&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.InvalidVersionString">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid version string..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_ApplyingConstraints">
            <summary>
              Looks up a localized string similar to Applying constraint &apos;{0} {1}&apos; defined in {2}..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_AttemptingToRetrievePackageFromSource">
            <summary>
              Looks up a localized string similar to Attempting to resolve dependency &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_BeginAddPackageReference">
            <summary>
              Looks up a localized string similar to Adding &apos;{0}&apos; to {1}..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_BeginInstallPackage">
            <summary>
              Looks up a localized string similar to Installing &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_BeginRemovePackageReference">
            <summary>
              Looks up a localized string similar to Removing &apos;{0}&apos; from {1}..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_BeginUninstallPackage">
            <summary>
              Looks up a localized string similar to Uninstalling &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_NoUpdatesAvailable">
            <summary>
              Looks up a localized string similar to No updates available for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_NoUpdatesAvailableForProject">
            <summary>
              Looks up a localized string similar to No updates available for &apos;{0}&apos; in project &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_PackageAlreadyInstalled">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; already installed..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_PackageInstalledSuccessfully">
            <summary>
              Looks up a localized string similar to Successfully installed &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_PackageOperation">
            <summary>
              Looks up a localized string similar to {0} {1}.
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_ProjectAlreadyReferencesPackage">
            <summary>
              Looks up a localized string similar to {0} already has a reference to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_SuccessfullyAddedPackageReference">
            <summary>
              Looks up a localized string similar to Successfully added &apos;{0}&apos; to {1}..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_SuccessfullyRemovedPackageReference">
            <summary>
              Looks up a localized string similar to Successfully removed &apos;{0}&apos; from {1}..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_SuccessfullyUninstalledPackage">
            <summary>
              Looks up a localized string similar to Successfully uninstalled &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Log_UpdatingPackages">
            <summary>
              Looks up a localized string similar to Updating &apos;{0}&apos; from version &apos;{1}&apos; to &apos;{2}&apos; in project &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_AssemblyNameRequired">
            <summary>
              Looks up a localized string similar to Assembly name is required..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_DependenciesHasMixedElements">
            <summary>
              Looks up a localized string similar to &lt;dependencies&gt; element must not contain both &lt;group&gt; and &lt;dependency&gt; child elements..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_DependencyIdRequired">
            <summary>
              Looks up a localized string similar to Dependency Id is required..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_ExcludeContainsInvalidCharacters">
            <summary>
              Looks up a localized string similar to Exclude path &apos;{0}&apos; contains invalid characters..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_IdMaxLengthExceeded">
            <summary>
              Looks up a localized string similar to Id must not exceed 100 characters..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_InvalidMinClientVersion">
            <summary>
              Looks up a localized string similar to The &apos;minClientVersion&apos; attribute in the package manifest has invalid value. It must be a valid version string..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_InvalidPrereleaseDependency">
            <summary>
              Looks up a localized string similar to A stable release of a package should not have on a prerelease dependency. Either modify the version spec of dependency &quot;{0}&quot; or update the version field..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_InvalidReference">
            <summary>
              Looks up a localized string similar to Invalid assembly reference &apos;{0}&apos;. Ensure that a file named &apos;{0}&apos; exists in the lib directory..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_InvalidReferenceFile">
            <summary>
              Looks up a localized string similar to Assembly reference &apos;{0}&apos; contains invalid characters..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_InvalidSchemaNamespace">
            <summary>
              Looks up a localized string similar to Invalid schema namespace &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_NotAvailable">
            <summary>
              Looks up a localized string similar to The manifest of this package has not been read. Call ReadManifest() before calling this method..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_NotFound">
            <summary>
              Looks up a localized string similar to Could not find manifest file at &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_ReferencesHasMixedElements">
            <summary>
              Looks up a localized string similar to &lt;references&gt; element must not contain both &lt;group&gt; and &lt;reference&gt; child elements..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_ReferencesIsEmpty">
            <summary>
              Looks up a localized string similar to The element package\metadata\references\group must contain at least one &lt;reference&gt; child element..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_RequiredElementMissing">
            <summary>
              Looks up a localized string similar to The required element &apos;{0}&apos; is missing from the manifest..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_RequiredMetadataMissing">
            <summary>
              Looks up a localized string similar to {0} is required..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_RequireLicenseAcceptanceRequiresLicenseUrl">
            <summary>
              Looks up a localized string similar to Enabling license acceptance requires a license url..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_SourceContainsInvalidCharacters">
            <summary>
              Looks up a localized string similar to Source path &apos;{0}&apos; contains invalid characters..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_TargetContainsInvalidCharacters">
            <summary>
              Looks up a localized string similar to Target path &apos;{0}&apos; contains invalid characters..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Manifest_UriCannotBeEmpty">
            <summary>
              Looks up a localized string similar to {0} cannot be empty..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.MissingFrameworkName">
            <summary>
              Looks up a localized string similar to Framework name is missing..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.NewerVersionAlreadyReferenced">
            <summary>
              Looks up a localized string similar to Already referencing a newer version of &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PackageAuthoring_FileNotFound">
            <summary>
              Looks up a localized string similar to File not found: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PackageDoesNotContainManifest">
            <summary>
              Looks up a localized string similar to Package does not contain a manifest..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PackageHasDependent">
            <summary>
              Looks up a localized string similar to Unable to uninstall &apos;{0}&apos; because &apos;{1}&apos; depends on it..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PackageHasDependents">
            <summary>
              Looks up a localized string similar to Unable to uninstall &apos;{0}&apos; because &apos;{1}&apos; depend on it..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PackageMinVersionNotSatisfied">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; package requires NuGet client version &apos;{1}&apos; or above, but the current NuGet version is &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PackageRestoreConsentCheckBoxText">
            <summary>
              Looks up a localized string similar to &amp;Allow NuGet to download missing packages.
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PackageServerError">
             <summary>
               Looks up a localized string similar to Failed to process request. &apos;{0}&apos;. 
            {1}..
             </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PortableFrameworkProfileComponentIsEmpty">
            <summary>
              Looks up a localized string similar to The profile part of a portable target framework must not contain empty component..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PortableFrameworkProfileComponentIsPortable">
            <summary>
              Looks up a localized string similar to The profile part of a portable target framework must not contain a portable framework component..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PortableFrameworkProfileEmpty">
            <summary>
              Looks up a localized string similar to Portable target framework must not have an empty profile part..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PortableFrameworkProfileHasDash">
            <summary>
              Looks up a localized string similar to The profile part of a portable target framework must not contain the &apos;-&apos; character..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.PortableFrameworkProfileHasSpace">
            <summary>
              Looks up a localized string similar to The profile part of a portable target framework must not contain empty space..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ProjectDoesNotHaveReference">
            <summary>
              Looks up a localized string similar to {0} does not reference &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ReferenceFile_InvalidDevelopmentFlag">
            <summary>
              Looks up a localized string similar to Unable to parse developmentDependency value &apos;{0}&apos; from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ReferenceFile_InvalidRequireReinstallationFlag">
            <summary>
              Looks up a localized string similar to Unable to parse requireReinstallation value &apos;{0}&apos; from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.ReferenceFile_InvalidVersion">
            <summary>
              Looks up a localized string similar to Unable to parse version value &apos;{0}&apos; from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.SemVerSpecialVersionTooLong">
            <summary>
              Looks up a localized string similar to The special version part cannot exceed 20 characters..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.SettingsCredentials_UsingSavedCredentials">
            <summary>
              Looks up a localized string similar to Using credentials from config. UserName: {0}.
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.SupportedFrameworkIsNull">
            <summary>
              Looks up a localized string similar to One of the supported framework is null..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.TokenHasNoValue">
            <summary>
              Looks up a localized string similar to The replacement token &apos;{0}&apos; has no value..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.TypeMustBeASemanticVersion">
            <summary>
              Looks up a localized string similar to Type to compare must be an instance of SemanticVersion..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnableToFindCompatibleItems">
            <summary>
              Looks up a localized string similar to Could not install package &apos;{0}&apos;. You are trying to install this package into a project that targets &apos;{1}&apos;, but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnableToLocateDependency">
            <summary>
              Looks up a localized string similar to Unable to locate dependency &apos;{0}&apos;. It may have been uninstalled..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnableToLocateWIF">
            <summary>
              Looks up a localized string similar to Connection to feed &apos;{0}&apos; requires the Windows Identity Foundation runtime to be installed. .
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnableToResolveDependency">
            <summary>
              Looks up a localized string similar to Unable to resolve dependency &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnableToResolveUri">
            <summary>
              Looks up a localized string similar to Unable to resolve &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnknownPackage">
            <summary>
              Looks up a localized string similar to Unable to find package &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnknownPackageSpecificVersion">
            <summary>
              Looks up a localized string similar to Unable to find version &apos;{1}&apos; of package &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnknownSchemaVersion">
            <summary>
              Looks up a localized string similar to Unknown schema version &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UnsupportedHashAlgorithm">
            <summary>
              Looks up a localized string similar to Hash algorithm &apos;{0}&apos; is unsupported. Supported algorithms include: SHA512 and SHA256..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.UserSettings_UnableToParseConfigFile">
            <summary>
              Looks up a localized string similar to Unable to parse config file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Warning_FileAlreadyExists">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; already exists. Skipping....
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Warning_FileModified">
            <summary>
              Looks up a localized string similar to Skipping &apos;{0}&apos; because it was modified..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Warning_PackageSkippedBecauseItIsInUse">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; skipped, because it is in use by &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.Warning_UninstallingPackageWillBreakDependents">
            <summary>
              Looks up a localized string similar to Uninstalling &apos;{0}&apos; might cause &apos;{1}&apos; to be broken..
            </summary>
        </member>
        <member name="P:NuGet.Resources.NuGetResources.XdtError">
            <summary>
              Looks up a localized string similar to An error occurred while applying transformation to &apos;{0}&apos; in project &apos;{1}&apos;:.
            </summary>
        </member>
        <member name="T:NuGet.FrameworkNameEqualityComparer">
            <summary>
            The default comparer of FrameworkName performs case-sensitive comparison. This class does case-insensitive comparison.
            </summary>
        </member>
        <member name="M:NuGet.PathUtility.GetRelativePath(System.String,System.String)">
            <summary>
            Returns path2 relative to path1, with Path.DirectorySeparatorChar as separator
            </summary>
        </member>
        <member name="M:NuGet.PathUtility.GetRelativePath(System.String,System.String,System.Char)">
            <summary>
            Returns path2 relative to path1, with given path separator
            </summary>
        </member>
        <member name="M:NuGet.VersionUtility.ParseFrameworkName(System.String)">
            <summary>
            This function tries to normalize a string that represents framework version names into
            something a framework name that the package manager understands.
            </summary>
        </member>
        <member name="M:NuGet.VersionUtility.ParseVersionSpec(System.String)">
            <summary>
            The version string is either a simple version or an arithmetic range
            e.g.
                 1.0         --> 1.0 â‰¤ x
                 (,1.0]      --> x â‰¤ 1.0
                 (,1.0)      --> x &lt; 1.0
                 [1.0]       --> x == 1.0
                 (1.0,)      --> 1.0 &lt; x
                 (1.0, 2.0)   --> 1.0 &lt; x &lt; 2.0
                 [1.0, 2.0]   --> 1.0 â‰¤ x â‰¤ 2.0
            </summary>
        </member>
        <member name="M:NuGet.VersionUtility.ParseFrameworkFolderName(System.String,System.Boolean,System.String@)">
            <summary>
            Parses the specified string into FrameworkName object.
            </summary>
            <param name="path">The string to be parse.</param>
            <param name="strictParsing">if set to <c>true</c>, parse the first folder of path even if it is unrecognized framework.</param>
            <param name="effectivePath">returns the path after the parsed target framework</param>
            <returns></returns>
        </member>
        <member name="M:NuGet.VersionUtility.IsCompatible(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
            <summary>
            Determines if a package's target framework can be installed into a project's framework.
            </summary>
            <param name="frameworkName">The project's framework</param>
            <param name="targetFrameworkName">The package's target framework</param>
        </member>
        <member name="M:NuGet.VersionUtility.GetProfileCompatibility(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
            <summary>
            Given 2 framework names, this method returns a number which determines how compatible
            the names are. The higher the number the more compatible the frameworks are.
            </summary>
        </member>
        <member name="M:NuGet.VersionUtility.GetCompatibilityBetweenPortableLibraryAndPortableLibrary(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
            <summary>
            Attempt to calculate how compatible a portable framework folder is to a portable project.
            The two portable frameworks passed to this method MUST be compatible with each other.
            </summary>
            <remarks>
            The returned score will be negative value.
            </remarks>
        </member>
    </members>
</doc>
