<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework.InMemory</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Data.Entity.Internal.InMemoryStrings.InvalidEnumValue(System.Object,System.Object)">
            <summary>
            The value provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Internal.InMemoryStrings.LogSavedChanges(System.Object)">
            <summary>
            Saved {count} entities to in-memory store.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Internal.InMemoryStrings.InMemoryNotInUse">
            <summary>
            In-Memory-specific methods can only be used when the context is using an In-Memory database.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Storage.Internal.IInMemoryStore.EnsureCreated(Microsoft.Data.Entity.Metadata.IModel)">
            <summary>
                Returns true just after the Store has been created, false thereafter
            </summary>
            <returns>
                true if the Store has just been created, false otherwise
            </returns>
        </member>
        <member name="M:Microsoft.Data.Entity.Storage.Internal.InMemoryStore.EnsureCreated(Microsoft.Data.Entity.Metadata.IModel)">
            <summary>
                Returns true just after the database has been created, false thereafter
            </summary>
            <returns>
                true if the database has just been created, false otherwise
            </returns>
        </member>
    </members>
</doc>
