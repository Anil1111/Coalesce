@inherits Microsoft.Extensions.CodeGeneration.Templating.RazorTemplateBase
@using Intellitect.ComponentModel.TypeDefinition
@using Intellitect.Extensions.CodeGenerators.Mvc.Utilities
@using Microsoft.Extensions.CodeGeneration
@{
    ModelType contextInfo = Model.ContextInfo;
    string namespaceName = Model.Namespace;
    if (!string.IsNullOrWhiteSpace(Model.AreaName))
    {
        namespaceName += "." + Model.AreaName;
    }
}
using Intellitect.ComponentModel.Controllers;
// Model Namespaces
@foreach (var ns in ReflectionRepository.Namespaces.Where(f => f != "System"))
{
    @:using @ns;
}

namespace @(namespaceName).Api
{
    // This class allows developers to inject base class behaviors into the inheritance chain
    // This file should not be modified, but another partial class should be created where your custom behavior can be placed.
    public partial class LocalBaseApiController<T> : BaseApiController<T, @contextInfo.Name>
        where T : class, new()
    {
    }
}