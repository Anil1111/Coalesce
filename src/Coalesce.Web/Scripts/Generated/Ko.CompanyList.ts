
/// <reference path="../coalesce.dependencies.d.ts" />

// Knockout List View Model for: Company
// Auto Generated by IntelliTect.Coalesce

var baseUrl = baseUrl || '';

module ListViewModels {

    export namespace CompanyDataSources {
        export class Default extends Coalesce.DataSource<ViewModels.Company> { }
            }

    export class CompanyList extends Coalesce.BaseListViewModel<ViewModels.Company> {
        protected modelName = "Company";
        protected apiController = "/Company";
        public modelKeyName = "companyId";
        public itemClass = ViewModels.Company;

        public filter: {
            companyId?:number;
            name?:string;
            address1?:string;
            address2?:string;
            city?:string;
            state?:string;
            zipCode?:string;
            altName?:string;
        } = null;
    
        /** 
            The namespace containing all possible values of this.dataSource.
        */
        public dataSources: typeof CompanyDataSources = CompanyDataSources;

        /**
            The data source on the server to use when retrieving objects.
            Valid values are in this.dataSources.
        */
        public dataSource: Coalesce.DataSource<ViewModels.Company> = new this.dataSources.Default();

        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<CompanyList, ViewModels.Company>(Coalesce.GlobalConfiguration.listViewModel);
        public coalesceConfig = new Coalesce.ListViewModelConfiguration<CompanyList, ViewModels.Company>(CompanyList.coalesceConfig);


        protected createItem = (newItem?: any, parent?: any) => new ViewModels.Company(newItem, parent);

        constructor() {
            super();
        }
    }

    export namespace CompanyList {
        // Classes for use in method calls to support data binding for input for arguments
    }
}