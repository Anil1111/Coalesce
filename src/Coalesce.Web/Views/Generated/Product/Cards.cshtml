@using IntelliTect.Coalesce.Helpers
@{ ViewBag.Fluid = true; }


<div style="padding: 10px 15px">
    <h1 style="display:inline-block">
        Product List
            <span style="font-size: .5em; padding-left: 20px;"><a href="~/Product/Docs">API Docs</a></span>
    </h1>
    <span class="label label-info" data-bind="fadeVisible: isLoading()">Loading...</span>

    <div class="clearfix">
        <div style="display: inline-block; font-size: 1.1em; margin-right: 10px;">
            <i class="fa fa-arrow-circle-left" data-bind="enabled: previousPageEnabled(), click: previousPage"></i>
            Page
            <input data-bind="textInput: page" style="width: 35px">
            of
            <span data-bind="text: pageCount"></span>
            <i class="fa fa-arrow-circle-right" data-bind="enabled: nextPageEnabled(), click: nextPage"></i>
        </div>
        <select data-bind="value:pageSize" class="form-control" style="width: 100px; display: inline-block">
            <option value="1">1</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="50">50</option>
            <option value="100">100</option>
            <option value="500">500</option>
            <option value="1000">1000</option>
            <option value="10000">10000</option>
        </select>

        <input class="form-control pull-right" style="width: 250px; margin-left: 20px" data-bind="textInput: search" placeholder="Search" />

        <div class="btn-group pull-right">
                    <a href="~/Product/CreateEdit?@(ViewBag.Query)" role="button" class="btn btn-sm btn-default "><i class="fa fa-plus"></i> Create</a>
                <button data-bind="click:load" class="btn btn-sm btn-default "><i class="fa fa-refresh"></i> Refresh</button>
                @if (ViewBag.Editable)
                {
                <a href="~/Product/Table?@(ViewBag.Query)" role="button" class="btn btn-sm btn-default "><i class="fa fa-lock"></i> Make Read-only</a>
                }
                    else
                    {
                    <a href="~/Product/TableEdit?@ViewBag.Query" role="button" class="btn btn-sm btn-default "><i class="fa fa-pencil"></i> Make Editable</a>
                    }
        </div>
    </div>
</div>
<hr />


<div class="flex-card-container" data-bind="foreach: items, visible: isLoaded" style="display: none">
    <div class="flex-card ">
            <div class="card-heading">
                <h3 class="card-title">
                    <span data-bind="text: name"></span>
                </h3>
            </div>
        <div class="card-body flex">

            <dl>
                    <dt>Name</dt>
                    <dd>
                        @(Knockout.DisplayFor<Product>(p => p.Name))
                    </dd>

            </dl>


            <div style="margin-top: auto">
                <!-- Editor buttons -->
                <div class="pull-right" role="group">
                                            <a data-bind="attr:{ href: editUrl }" class="btn btn-sm btn-default">
                            <i class="fa fa-pencil"></i>
                        </a>
                                            <button data-bind="click: deleteItemWithConfirmation" class="btn btn-sm btn-danger">
                            <i class="fa fa-remove"></i>
                        </button>

                </div>
                <span class="form-control-static" data-bind="text: errorMessage"></span>
            </div>

        </div>
    </div>
</div>







    @section Scripts
    {
    <script>
        var productList = new ListViewModels.ProductList();
        @if (ViewBag.ParentIdName != null)
                                                                                            {
                                                                                                @:productList.queryString = "@(ViewBag.ParentIdName) = @(ViewBag.ParentId)";
                                                                                            }

        productList.isSavingAutomatically = false;
        ko.applyBindings(productList);
        productList.isSavingAutomatically = true;

        productList.includes = "Editor";
        productList.load();
    </script>
    }
