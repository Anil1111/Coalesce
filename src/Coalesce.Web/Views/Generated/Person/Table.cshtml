@using IntelliTect.Coalesce.Helpers
@{ ViewBag.Fluid = true; }


<div style="padding: 10px 15px">
    <h1 style="display:inline-block">
        Person List
            <span style="font-size: .5em; padding-left: 20px;"><a href="~/Person/Docs">API Docs</a></span>
    </h1>
    <span class="label label-info" data-bind="fadeVisible: isLoading()">Loading...</span>

    <div class="clearfix">
        <div style="display: inline-block; font-size: 1.1em; margin-right: 10px;">
            <i class="fa fa-arrow-circle-left" data-bind="enabled: previousPageEnabled(), click: previousPage"></i>
            Page
            <input data-bind="textInput: page" style="width: 35px">
            of
            <span data-bind="text: pageCount"></span>
            <i class="fa fa-arrow-circle-right" data-bind="enabled: nextPageEnabled(), click: nextPage"></i>
        </div>
        <select data-bind="value:pageSize" class="form-control" style="width: 100px; display: inline-block">
            <option value="1">1</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="50">50</option>
            <option value="100">100</option>
            <option value="500">500</option>
            <option value="1000">1000</option>
            <option value="10000">10000</option>
        </select>

        <input class="form-control pull-right" style="width: 250px; margin-left: 20px" data-bind="textInput: search" placeholder="Search" />

        <div class="btn-group pull-right">
                    <a href="~/Person/CreateEdit?@(ViewBag.Query)" role="button" class="btn btn-sm btn-default "><i class="fa fa-plus"></i> Create</a>
                <button data-bind="click:load" class="btn btn-sm btn-default "><i class="fa fa-refresh"></i> Refresh</button>
                @if (ViewBag.Editable)
                {
                <a href="~/Person/Table?@(ViewBag.Query)" role="button" class="btn btn-sm btn-default "><i class="fa fa-lock"></i> Make Read-only</a>
                }
                    else
                    {
                    <a href="~/Person/TableEdit?@ViewBag.Query" role="button" class="btn btn-sm btn-default "><i class="fa fa-pencil"></i> Make Editable</a>
                    }
        </div>
    </div>
</div>
<hr />
<div class="card">
    <div class="card-body">
            <table class="table @(ViewBag.Editable ? " editable" : "" )">
        <thead>
            <tr>
                    <th>Title</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Gender</th>
                    <th>Cases Assigned</th>
                    <th>Cases Reported</th>
                    <th>Birth Date</th>
                    <th>Name</th>
                    <th>Company</th>
                <th style="width: 1%">
                </th>
            </tr>
        </thead>
        <tbody>
            <!-- ko foreach: items -->
            <tr data-bind="css: {'btn-warning': errorMessage()}">
                    @if (@ViewBag.Editable)
                    {
                    <td>
                        @(Knockout.SelectFor<Person>(p => p.Title))
                    </td>
                    <td>
                        @(Knockout.InputFor<Person>(p => p.FirstName))
                    </td>
                    <td>
                        @(Knockout.InputFor<Person>(p => p.LastName))
                    </td>
                    <td>
                        @(Knockout.InputFor<Person>(p => p.Email))
                    </td>
                    <td>
                        @(Knockout.SelectFor<Person>(p => p.Gender))
                    </td>
                    <td>
                        <a data-bind = 'attr: {href: CasesAssignedListUrl}, text: casesAssigned().length + " - Edit"' class='btn btn-default btn-sm'></a>
                    </td>
                    <td>
                        <a data-bind = 'attr: {href: CasesReportedListUrl}, text: casesReported().length + " - Edit"' class='btn btn-default btn-sm'></a>
                    </td>
                    <td>
                        @(Knockout.InputFor<Person>(p => p.BirthDate))
                    </td>
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.Name))
                    </td>
                    <td>
                        @(Knockout.SelectForObject<Person>(p => p.Company))
                    </td>
                    }
                    else
                    {
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.Title))
                    </td>
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.FirstName))
                    </td>
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.LastName))
                    </td>
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.Email))
                    </td>
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.Gender))
                    </td>
                    <td>
                        <a data-bind = 'attr: {href: CasesAssignedListUrl}, text: casesAssigned().length + " - Edit"' class='btn btn-default btn-sm'></a>
                    </td>
                    <td>
                        <a data-bind = 'attr: {href: CasesReportedListUrl}, text: casesReported().length + " - Edit"' class='btn btn-default btn-sm'></a>
                    </td>
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.BirthDate))
                    </td>
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.Name))
                    </td>
                    <td>
                        @(Knockout.DisplayFor<Person>(p => p.Company))
                    </td>
                    }
                <td>

                    <!-- Editor buttons -->
                    <div class="btn-group pull-right" role="group" style="display: inline-flex">
                        <!-- Action buttons -->
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Actions <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                        <li><a href="#" data-bind = 'click: renameUi'>Rename</a></li>
                                        <li><a href="#" data-bind = 'click: changeSpacesToDashesInNameUi'>Change Spaces To Dashes In Name</a></li>
                                </ul>
                            </div>
                                                    <a data-bind="attr:{ href: editUrl }" class="btn btn-sm btn-default">
                                <i class="fa fa-pencil"></i>
                            </a>
                                                    <button data-bind="click: deleteItemWithConfirmation" class="btn btn-sm btn-danger">
                                <i class="fa fa-remove"></i>
                            </button>

                    </div>
                    <div class="form-control-static" data-bind="text: errorMessage"></div>
                </td>
            </tr>
            <!-- /ko -->
        </tbody>
    </table>
</div>
</div>



    <div class="card">
        <div class="card-heading">
            <h3 class="card-title">Actions</h3>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th style="width: 20%;">Action</th>
                        <th style="width: 50%;">Result</th>
                        <th style="width: 20%;">Successful</th>
                        <th style="width: 10%;"></th>
                    </tr>
                </thead>
                <tbody>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: addModal">Add</button>
                            </td>
                            <td>
                                <span class="" data-bind="text: addResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: addWasSuccessful"></span>
                                <span class="" data-bind="text: addMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: addIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: getUserModal">Get User</button>
                            </td>
                            <td>
                                <span class="" data-bind="text: getUserResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: getUserWasSuccessful"></span>
                                <span class="" data-bind="text: getUserMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: getUserIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: getUserPublicModal">Get User Public</button>
                            </td>
                            <td>
                                <span class="" data-bind="text: getUserPublicResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: getUserPublicWasSuccessful"></span>
                                <span class="" data-bind="text: getUserPublicMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: getUserPublicIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: namesStartingWithModal">Names Starting With</button>
                            </td>
                            <td>
                                <span class="" data-bind="text: namesStartingWithResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: namesStartingWithWasSuccessful"></span>
                                <span class="" data-bind="text: namesStartingWithMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: namesStartingWithIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: namesStartingWithPublicModal">Names Starting With Public</button>
                            </td>
                            <td>
                                <span class="" data-bind="text: namesStartingWithPublicResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: namesStartingWithPublicWasSuccessful"></span>
                                <span class="" data-bind="text: namesStartingWithPublicMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: namesStartingWithPublicIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: borCPeopleModal">Bor C People</button>
                            </td>
                            <td>
                                <span class="" data-bind="text: borCPeopleResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: borCPeopleWasSuccessful"></span>
                                <span class="" data-bind="text: borCPeopleMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: borCPeopleIsLoading()">Loading</span>
                            </td>
                        </tr>
                </tbody>
            </table>
        </div>
    </div>


    <!-- Modal for method: Add -->
    <div id='method-Add' class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Add</h4>
                </div>
                <div class="modal-body form-horizontal" data-bind="with: addArgs">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Number One</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: numberOne">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label">Number Two</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: numberTwo">
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary btn-ok">OK</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- Modal for method: NamesStartingWith -->
    <div id='method-NamesStartingWith' class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Names Starting With</h4>
                </div>
                <div class="modal-body form-horizontal" data-bind="with: namesStartingWithArgs">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Characters</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: characters">
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary btn-ok">OK</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- Modal for method: NamesStartingWithPublic -->
    <div id='method-NamesStartingWithPublic' class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Names Starting With Public</h4>
                </div>
                <div class="modal-body form-horizontal" data-bind="with: namesStartingWithPublicArgs">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Characters</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: characters">
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary btn-ok">OK</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    @section Scripts
    {

    <script>
        var personList = new ListViewModels.PersonList();
        
        // Set up parent info based on the URL.
        @if (ViewBag.ParentIdName != null)
        {
            @:personList.queryString = "@(ViewBag.ParentIdName) = @(ViewBag.ParentId)";
        }

        // Save and restore values from the URL:
        var urlVariables = ['page', 'pageSize', 'search'];
        $.each(urlVariables, function(){
            var param = intellitect.utilities.GetUrlParameter(this);
            if (param) {personList[this](param);}
        })
        personList.isLoading.subscribe(function(){
            var newUrl = window.location.href;
            
            $.each(urlVariables, function(){
                var param = personList[this]();
                newUrl = intellitect.utilities.SetUrlParameter(newUrl, this, param);
            })
            history.replaceState(null, document.title, newUrl);
        });

        personList.isSavingAutomatically = false;
        ko.applyBindings(personList);
        personList.isSavingAutomatically = true;

        personList.includes = "Editor";
        personList.load();

    </script>
    }
