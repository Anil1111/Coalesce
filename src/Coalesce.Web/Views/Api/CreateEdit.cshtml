@using IntelliTect.Coalesce.Utilities
@using IntelliTect.Coalesce.TypeDefinition
@model IntelliTect.Coalesce.TypeDefinition.ClassViewModel
@{
    ClassViewModel model = Model;
}

<div class="panel panel-default">
    <div class="panel-heading">
        <div class="btn-group pull-right">
            <button onclick="window.history.back()" class="btn btn-sm btn-default">Back</button>
            <button data-bind="click:function() { load(); }" class="btn btn-sm btn-default">Refresh</button>
        </div>
        <h1 class="clearfix" style="display:inline-block;">@(model.Name.ToProperCase())</h1>
        <span class="label label-info" data-bind="fadeVisible: isLoading()">Loading...</span>

    </div>

    <div class="panel-body">
        @await Html.PartialAsync("_EditorHtml", model)
    </div>
</div>



@section Scripts
{
    @*<script src="~/@Model.ApiName/Knockout"></script>*@

    <script>
        var a@(model.ViewModelObjectName) = new ViewModels.@(@model.ViewModelClassName)();
        a@(model.ViewModelObjectName).includes = "Editor";

        @if (ViewBag.Id != null){
            @:a@(model.ViewModelObjectName).load(@ViewBag.Id);
        }
        @if (ViewBag.ParentIdName != null) {
        @:a@(model.ViewModelObjectName).@(((string)(ViewBag.ParentIdName)))(@ViewBag.ParentId);
        }

        a@(model.ViewModelObjectName).isSavingAutomatically = false;
        a@(model.ViewModelObjectName).loadChildren(function() {
            ko.applyBindings(a@(model.ViewModelObjectName));
            a@(model.ViewModelObjectName).isSavingAutomatically = true;
        });
    </script>
}
